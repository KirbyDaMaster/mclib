
0800015E SetTile
  ; r0 - New 16x16 tile index to set
  ; r1 - Position of the tile, and index within the layer's 16x16 tile mapping
  ; r2 - Layer index

080002B0 GetTileType
  ; r0 - Position of the tile, and index within the layer's 16x16 tile mapping
  ; r1 - Layer index
  ; Returns the current tile type for that tile
0807B314 SetTileType
  ; r0 - Tile type to set
  ; r1 - Position of the tile, and index within the layer's 16x16 tile mapping
  ; r2 - Layer index

080002A0 GetTileTypeByEntity
  ; r0 - Entity pointer
  ; Returns the current tile type for the tile under that entity
080002A4 GetTileTypeByPos
  ; r0 - X pos in pixels
  ; r1 - Y pos in pixels
  ; r2 - Layer index (index in list 08000228)
  ; Returns the current tile type for the tile under that position
080002E4 GetTile??????
  ; r0 - Tile type
  ; Returns ??? from either list 080B37A0 or 080B3910

0808094C GetLayerDataByIndex
  ; r0 - Layer index
  ; If layer index is 2, return the BG1 layer data pointer, 0200B650.
  ; Otherwise, return the BG2 layer data pointer, 02025EB0.

0801AF8C DeleteLoadedTileEntity
  ; r0 - Bitfield of the tile entity's X and Y pos in 16x16 tiles
  ; r1 - Layer index
  ; If it finds the matching tile entity, it deletes it?


08000EF2 CallFuncInR0
08000EF4 CallFuncInR1
08000EF6 CallFuncInR2
08000EF8 CallFuncInR3
08000EFA CallFuncInR4
08000EFC CallFuncInR5
08000EFE CallFuncInR6
08000F00 CallFuncInR7
08000F02 CallFuncInR8
08000F04 CallFuncInR9
08000F06 CallFuncInR10
08000F08 CallFuncInR11
08000F0A CallFuncInR12
08000F0C CallFuncInR13
08000F0E CallFuncInR14


0800290E CheckRectOnScreen
  ; r0 - X pos
  ; r1 - Y pos
  ; r2 - Width
  ; r3 - Height

0800293E CheckPlayerInRegion
  ; r0 - Center X pos
  ; r1 - Center Y pos
  ; r2 - Half width (on either side of the center)
  ; r3 - Half height (above or below the center)


;;; Items

08053FF0 GiveItem
  ; r0 - Item ID
  ; r1 - ? Maybe number of mysterious shells to give? or 0 for any other item
  ; This function seems to be responsible for actually putting the item in your inventory, and maybe deciding on the item get message text too. But it's not responsible for making Link hold the item over his head and have the music play.
  ; 08083C34 calls GiveItem. this is in function 08083C9C.
  ;   r0 is from r4+A, r1 is from r4+B
  ;   r4 is 030011E8 - seems to be an entity?
080A7C38 GiveItemWithCutscene
  ; r0 - Item ID
  ; r1 - ? Maybe number of mysterious shells to give? or 0 for any other item
  ; r2 - affects what the cutscene does? (used in a switch statement at 08083C04)
  ;   0 - Normal
  ;   3 - ??? (used by script command 86, doesn't seem to give the item...?)
  ; If item ID is 3F (Mysterious Shells), but the byte at 02002AFB,1 is nonzero, it instead gives item ID 57 (big green rupee). Also it sets argument r1 to 0.
  ; This function seems to be responsible for having Link hold the item over his head and have the music play. It seems to create an item get entity in RAM which then makes the cutscene happen?
080A7C00 GiveItem3?
  ; Same args as GiveItemWithCutscene
080A7C18 GiveItem4?
  ; Same args as GiveItemWithCutscene

0807CA84 GetOwnedItemInfo
  ; r0 - Which item ID
  ; Returns the owned item info bits for that item (1, 2, or 3).
0807CAA0 SetOwnedItemInfo
  ; r0 - Which item ID. e.g. 0 is Smith's Blade (key item), 4 is White Sword (Three Elements).
  ; r1 - Which bits to set for that item. Could be 1, 2, or 3 (both), but it seems like only 1 is used?

08054398 EquipItem1??
  ; 080543A4 - gives you the ability to pause
08054414 EquipItem2?
  ; r0 - Item ID
  ; r1 - Which slot to equip the item in?

080526CC GiveRupees
  ; r0 - Number of rupees to give

08081450 CheckShouldPlayItemGetCutscene
  ; r0 - Item entity
  ; Returns true if an item get cutscene should play when the player walks into this item, or false if it should just appear above the player's head briefly like a rupee.

08054754 CreateItemDrop
  ; r0 - 
  ; r1 - The item ID to try to drop.
  ;   00 means drop no item.
  ;   FC, FD, and FE mean drop a random kinstone piece (see 080FE1DD for which pieces).
  ;   FF means drop a Beetle enemy instead.
  ; r2 - 

08054464 SetBottleContents
  ; r0 - Item ID of the bottle contents to set
  ; r1 - Index of the bottle (0-3)

08053FD0 GetShopConfirmBuyMessageIDForItem
  ; r0 - Item ID
  ; Returns the message ID for the shopkeeper to say when you bring that item up to them.
08053FE0 GetShopPriceForItem
  ; r0 - Item ID
  ; Returns the number of rupees the item costs.


;;; Scripting

0807DAD0 StartCutscene1?
  ; r0 - Pointer to the entity that started this cutscene? (in list 03001160)
  ; r1 - ROM pointer to first script command (e.g. 08009B78)
0807DAF0 StartCutscene2?
  ; r0 - Pointer to the entity that started this cutscene? (in list 03001160)
  ; r1 - RAM pointer to cutscene entity (e.g. 02036570)
  ; r2 - ROM pointer to first script command (e.g. 08009B78)
0807DB88 StartCutscene3?
  ; r0 - RAM pointer to cutscene entity (e.g. 02036570)
  ; r1 - ROM pointer to first script command (e.g. 08009B78)

0807DB2C StartPlayerScript?
  ; r0 - ROM pointer to first script command (e.g. 08008FC0)
  ; Seems to start executing a script on the player entity (03001160)

0807DF74 ExecuteSetOfScriptCommands
  ; r0 - Pointer to the entity that started this cutscene? (in list 03001160)
  ; r1 - RAM pointer to cutscene entity (e.g. 02036570)

08016986 GetNextScriptCommandHalfword
  ; r0 - Pointer to the script command
  ; Reads the next halfword of the script command and returns it, which can be the command metadata, or one of its arguments.
0801698A GetNextScriptCommandHalfwordAfterCommandMetadata
  ; r0 - Pointer to the script command
  ; Skips one halfword, then reads the next halfword of the script command and returns it.
0801698E GetNextScriptCommandWord
  ; r0 - Pointer to the script command
  ; Reads the next 2 halfwords and ORs them together and returns it as a word.
08016998 GetNextScriptCommandWordAfterCommandMetadata
  ; r0 - Pointer to the script command
  ; Skips one halfword, then reads 2 halfwords and ORs them together and returns it as a word.

0807E000 ScriptCommand00Dummy
0807E004 ScriptCommand01StartInit
0807E014 ScriptCommand02EndInit
0807E024 ScriptCommand03Jump
0807E050 ScriptCommand04JumpIfCondition
0807E064 ScriptCommand05JumpIfNotCondition
0807E078 ScriptCommand06JumpIf???
0807E0A0 ScriptCommand07
0807E0B8 ScriptCommand08
0807E0CC ScriptCommand09
0807E0E0 ScriptCommand0A
0807E10C ScriptCommand0BExecFunction
0807E124 ScriptCommand0CExecFunctionWithArg
0807E148 ScriptCommand0DLoadRoomEntityList
0807E158 ScriptCommand0ECheck???Bit
0807E188 ScriptCommand0FCheckItemOwned
0807E1D8 ScriptCommand10CheckItemFormerlyOwned
0807E4AC ScriptCommand11Check???
0807E200 ScriptCommand12CheckLocalFlag
0807E220 ScriptCommand13CheckLocalFlagByOffset
0807E240 ScriptCommand14CheckGlobalFlag
0807E260 ScriptCommand15CheckRoomFlag
0807E280 ScriptCommand16CheckPlayerInRegion
0807E2A8 ScriptCommand17
0807E2E4 ScriptCommand18
0807E30C ScriptCommand19FaceTowardsPlayerAndCheck???
0807E390 ScriptCommand1ACheckNumRupeesOwned
0807E3BC ScriptCommand1BCheckNumMysteriousShellsOwned
0807E3E8 ScriptCommand1CCheck???
0807E40C ScriptCommand1DCheckKinstoneFused
0807E42C ScriptCommand1E
0807E48C ScriptCommand1F
0807E4CC ScriptCommand20
0807E4EC ScriptCommand21
0807E514 ScriptCommand22
0807E538 ScriptCommand23
0807E564 ScriptCommand24CheckPlayerMinishSized
0807E584 ScriptCommand25Check???
0807E5A0 ScriptCommand26CheckPlayerState
0807E5CC ScriptCommand27
0807E5F8 ScriptCommand28
0807E610 ScriptCommand29
0807E628 ScriptCommand2ASetLocalFlag
0807E634 ScriptCommand2BSetLocalFlagByOffset
0807E644 ScriptCommand2CClearLocalFlag
0807E650 ScriptCommand2DSetGlobalFlag
0807E65C ScriptCommand2EClearGlobalFlag
0807E668 ScriptCommand2FSetRoomFlag
0807E674 ScriptCommand30ClearRoomFlag
0807E680 ScriptCommand31
0807E690 ScriptCommand32Check02033280BitAndDo???
0807E6AC ScriptCommand33
0807E6DC ScriptCommand34
0807E700 ScriptCommand35
0807E72C ScriptCommand36
0807E75C ScriptCommand37
0807E778 ScriptCommand38
0807E788 ScriptCommand39
0807E79C ScriptCommand3A
0807E7AC ScriptCommand3B
0807E7B0 ScriptCommand3C
0807E7C4 ScriptCommand3D
0807E7D8 ScriptCommand3E
0807E7EC ScriptCommand3F
0807E800 ScriptCommand40
0807E80C ScriptCommand41
0807E858 ScriptCommand42
0807E864 ScriptCommand43RemovePlayerControl
0807E878 ScriptCommand44GivePlayerControl
0807E888 ScriptCommand45
0807E898 ScriptCommand46
0807E8C4 ScriptCommand47RunPlayerScript
0807E8D4 ScriptCommand48
0807E8E4 ScriptCommand49
0807E8E4 ScriptCommand4A
0807E8E4 ScriptCommand4B
0807E8E4 ScriptCommand4C
0807E908 ScriptCommand4DSetThisEntityState
0807E914 ScriptCommand4ESetExtraArgument
0807E924 ScriptCommand4F
0807E930 ScriptCommand50
0807E944 ScriptCommand51
0807E974 ScriptCommand52
0807E9D4 ScriptCommand53
0807E9DC ScriptCommand54
0807E9E4 ScriptCommand55
0807E9F0 ScriptCommand56
0807EA4C ScriptCommand57
0807EA88 ScriptCommand58
0807EA94 ScriptCommand59
0807EAB4 ScriptCommand5AShowMessageNoOverlapCameraFollowEntity
0807EAC0 ScriptCommand5BShowMessageNoOverlapEntity
0807EAD0 ScriptCommand5CShowMessageNoOverlapCameraFollowEntityAnd???
0807EAF0 ScriptCommand5DShowMessageNoOverlapCameraFollowEntityAnd???2
0807EB18 ScriptCommand5EShowMessageNoOverlapEntityFromExtraArgument
0807EB28 ScriptCommand5FShowMessageAlternate???
0807EB38 ScriptCommand60
0807EB44 ScriptCommand61FacingDirection
0807EB4C ScriptCommand62
0807EB74 ScriptCommand63FaceTowardsPlayer
0807EB8C ScriptCommand64MakePlayerFaceThis
0807EBA8 ScriptCommand65
0807EBB0 ScriptCommand66
0807EBC0 ScriptCommand67
0807EBC8 ScriptCommand68
0807EBD8 ScriptCommand69SetThisEntityPosition
0807EBF4 ScriptCommand6A
0807EC08 ScriptCommand6B
0807EC18 ScriptCommand6CNop
0807EC1C ScriptCommand6D
0807EC64 ScriptCommand6E
0807EC94 ScriptCommand6F
0807ECC4 ScriptCommand70
0807ECF4 ScriptCommand71
0807ED24 ScriptCommand72
0807EDD4 ScriptCommand73WaitFor???
0807EE04 ScriptCommand74
0807EE30 ScriptCommand75Check???
0807EEB4 ScriptCommand76WaitFor???
0807EEF4 ScriptCommand77
0807EF3C ScriptCommand78
0807EF80 ScriptCommand79SetCurrCutsceneBit?
0807EF90 ScriptCommand7ASetCurrCutsceneBit2?
0807EFA0 ScriptCommand7B
0807EFAC ScriptCommand7C
0807EFD4 ScriptCommand7D
0807EFE4 ScriptCommand7E
0807EFF4 ScriptCommand7F
0807F004 ScriptCommand80
0807F010 ScriptCommand81
0807F034 ScriptCommand82GiveItem
0807F050 ScriptCommand83GiveKinstonePiece
0807F060 ScriptCommand84CheckItemOwned
0807F078 ScriptCommand85SetOwnedItemInfo
0807F088 ScriptCommand86GiveItem???
0807F098 ScriptCommand87CenterScreenOnThis
0807F0A4 ScriptCommand88CenterScreenOnPlayer
0807F0B4 ScriptCommand89
0807F0C8 ScriptCommand8A
; All of the above script commands take the following arguments:
  ; r0 - Pointer to the entity that started this cutscene (in list 03001160)
  ; r1 - Cutscene entity pointer (e.g. 02036570)



0807F6F8 UnsetPlayerStateBit?
  ; r0 - Pointer to a cutscene entity (e.g. 02036570)
  ; This function reads the word at [r0+4], and clears any of those bits from the bitfield of player states (03003FB0).

08059C8C UpdateCurrentVisualZoneID
  ; r0 - 
  ; r1 - Index of which visual zone grouping this is?
  ; r2 - Where in RAM to store the new zone ID
  ; r3 - Pointer to the list of visual zones in ROM to check
  ; Returns true if there is a visual zone on screen at the moment.

080045C4 GetFacingDirection?
  ; r0 - Entity
  ; r1 - Entity to face towards
  ; Returns an index in list 08114F58
0806F5B0 GetFacingDirectionAnimOffset?
  ; r0 - Return value from GetFacingDirection
  ; Returns the animation index offset for this facing direction, read from 08114F58



;;; Flags

0801D5BC SetGenericBit
  ; r0 - Pointer to the bitfield
  ; r1 - Bit index to set in that bitfield
  ; Also returns whether the bit was already set before calling this function.
0801D5A8 CheckGenericBit
  ; r0 - Pointer to the bitfield
  ; r1 - Bit index to check in that bitfield
0801D5D4 ClearGenericBit
  ; r0 - Pointer to the bitfield
  ; r1 - Bit index to set in that bitfield
08000F10 CheckGenericBits
  ; (Simply calls CheckGenericBitsRAM, passing the same arguments.)
03005E60 CheckGenericBitsRAM
  ; r0 - Pointer to the bitfield
  ; r1 - First bit index to check in that bitfield
  ; r2 - Number of bits to check, sequentially from the first one specified
  ; Returns true only if all of the bits are set.

0807CD04 SetGlobalFlag
  ; r0 - Bit index
0807CC9C SetLocalFlagByOffset
  ; r0 - Bit index offset
  ; r1 - Bit index
  ; Adds r0 and r1 together and sets that bit.
0807CCB4 SetLocalFlag
  ; r0 - Bit index
  ; Sets the bit of index r0 plus [02033A94,2] (the current area's event flag offset).

0807CC30 CheckGlobalFlag
  ; r0 - Bit index
0807CB10 CheckLocalFlagByOffset
  ; r0 - Bit index offset
  ; r1 - Bit index
  ; Adds r0 and r1 together and checks that bit.
0807CBD0 CheckLocalFlag
  ; r0 - Bit index
  ; Checks the bit of index r0 plus [02033A94,2] (the current area's event flag offset).

0807CC78 CheckGlobalFlags
  ; r0 - First bit index
  ; r1 - Number of bits to check, sequentially from the first one specified
0807CC4C CheckLocalFlagsByOffset
  ; r0 - Bit index offset
  ; r1 - First bit index
  ; r2 - Number of bits to check, sequentially from the first one specified
0807CC60 CheckLocalFlags
  ; r0 - First bit index
  ; r1 - Number of bits to check, sequentially from the first one specified
  ; Sets the bit of index r0 plus [02033A94,2] (the current area's event flag offset).

0807CD10 SetRoomFlag
  ; r0 - Bit index
  ; 02034364 is the bitfield in question
0807CC3C CheckRoomFlag
  ; r0 - Bit index
0807CD8C ClearRoomFlag
  ; r0 - Bit index
0807CC88 CheckRoomFlags
  ; r0 - First bit index to check in that bitfield
  ; r1 - Number of bits to check, sequentially from the first one specified
  ; 02034364 is the bitfield in question

0807CD80 ClearGlobalFlag
  ; r0 - Bit index
0807CD20 ClearLocalFlagByOffset
  ; r0 - Bit index offset
  ; r1 - Bit index
0807CD34 ClearLocalFlag
  ; r0 - Bit index

0807CCC8 SetFlag
  ; r0 - Bitfield. (Note that if this equal to 0, it's invalid and no bit is set.)
  ;   & 0x03FF - Bit index. 
  ;   & 0xC000 - Affects what function to call.
  ;     0 - SetLocalFlag
  ;     1 - SetGlobalFlag
  ;     2 - SetRoomFlag
0807CBE4 CheckFlags
  ; r0 - Bitfield.
  ;   & 0x03FF - Bit index. 
  ;   & 0x3C00 - Number of bits to check (you need to add 1 to this, so 0 here means check 1 bit, etc)
  ;   & 0xC000 - Affects what function to call.
  ;     0 - CheckLocalFlags
  ;     1 - CheckGlobalFlags
  ;     2 - CheckRoomFlags
0807CD48 ClearFlag
  ; r0 - Bitfield.
  ;   & 0x03FF - Bit index. 
  ;   & 0xC000 - Affects what function to call.
  ;     0 - ClearLocalFlag
  ;     1 - ClearGlobalFlag
  ;     2 - ClearRoomFlag

08049D1C CheckEnemyIndexValid?
  ; r0 - Enemy index? (The index of the enemy entity in this room's enemy list)
  ; Returns false if that bit index is set in bitfield 02024050,4.
  ; Maybe checking if the enemy is dead?



0801E7F4 CheckKinstoneFused
  ; r0 - Kinstone ID (must subtract 1 to get the bit index)
  ; 02002C81 is the bitfield it looks in.

08000E50 Rand
  ; r0 - ?
08000EE8 RandClampToMax
  ; r0 - Random number from Rand
  ; r1 - Maximum is r1-1

0801D66C DMA
  ; r0 - Address to copy from
  ; r1 - Address to copy to
  ; r2 - Number of bytes to copy

0801D5EC FillAreaWithHalfword
  ; r0 - Halfword value to fill with
  ; r1 - Destination area to fill
  ; r2 - Length of the area to fill in bytes
0801D610 FillAreaWithWord
  ; r0 - Word value to fill with
  ; r1 - Destination area to fill
  ; r2 - Length of the area to fill in bytes
0801D630 FillAreaWithZero
  ; r0 - Destination area to fill
  ; r1 - Length of the area to fill in bytes

080B14D8 Decompress16Bit
080B14DC Decompress8Bit


0804B0C0 SetCurrentRoomPropertyList
  ; r0 - Area index
  ; r1 - Room index
  ; Reads the property list for the specified room and stores it to 020342EC.

0804B128 GetCurrentRoomProperty
  ; r0 - Property index (e.g. 3 is the tile entity list)
  ; Returns that property for the current room.
0804B0FC GetRoomProperty
  ; r0 - Area index
  ; r1 - Room index
  ; r2 - Property index
  ; Returns that property for the specified room.

0804AFDC RunCurrentRoomFuncProp6
0804AFF4 RunCurrentRoomFuncProps5And7AndDoOtherStuff?

0804B01C LoadAllCurrentRoomEntityLists
  ; Loads entity list in prop 1
  ; Loads entity list in prop 0
  ; Loads enemy entity list in prop 2 if global flag 0x15 is set
  ; Loads tile entity list in prop 3

0804B0B0 LoadRoomEntityListInProp1
  ; r0 - Area index
  ; r1 - Room index

0804B0E8 RunRoomFuncProp4
  ; r0 - Area index
  ; r1 - Room index

0804AF90 ChangeRoomAuto
0804AFB0 ChangeRoom
  ; r0 - New room pointer


080197D4 LoadTilesetAssetList
  ; r0 - Pointer to a tileset asset list (which has data about which GFX, palettes, and tile mappings to load)

0801D7EC LoadAssetList?
  ; r0 - An index of a pointer to the asset list in list 08100AA8.

03005E98 SetPaletteWithFade
  ; r0 - Pointer to the palette in RAM
  ; r1 - Pointer to where to load the palette in palette VRAM
  ; r2 - Multiplier 1?
  ; r3 - Multiplier 2?

08052CFC LoadArea?
08052DA8 InitializeRoomListInRAM
08052E10 InitializeRoomInRAM
  ; r0 - RAM pointer to initialize the room at (e.g. 02033CCC)
  ; r1 - ROM pointer to room's graphics metadata
  ; r2 - Area index
  ; r3 - Room index

0804ADDC LoadRoomEntityList
  ; r0 - Pointer to a room entity list.
0804ADF8 LoadRoomEntity
  ; r0 - Pointer to a room entity.
0804B058 LoadRoomEnemyList
  ; r0 - Pointer to a room entity list

0804B1AC LoadRoomTileEntities
  ; r0 - Pointer to the room's tile entity list in ROM
0804B290 LoadTileEntityType1
  ; r0 - Pointer to the tile entity in ROM
  ; Simply sets the local flag specified by the type 1 tile entity, in order to mark the room as visited.
0804B29C LoadTileEntityType2
  ; r0 - Pointer to the tile entity in ROM
0804B300 LoadTileEntityType4
  ; r0 - Pointer to the tile entity in ROM
  ; Creates a 9-24 entity.
0804B334 LoadTileEntityType9
  ; r0 - Pointer to the tile entity in ROM
0804B340 LoadTileEntityTypeA
  ; r0 - Pointer to the tile entity in ROM


080524A8 CreatePlayerEntity
  ; Creates the player entity, a type 1 entity

0804AA60 CreateEntityType3
  ; r0 - Subtype
  ; r1 - Form
080A7EE0 CreateEntityType4
  ; r0 - Subtype
080A2960 CreateEntityType6
  ; r0 - Subtype
  ; r1 - Form
  ; r2 - unknown4
0806ED50 CreateEntityType7
  ; r0 - Subtype
  ; r1 - Form
  ; r2 - unknown4
08053178 CreateEntity9-39
08058760 CreateEntity9-0B
  ; r0 - Pointer to the parent entity?
0805DDEC CreateEntity9-36
  ; r1 - A pointer. The form for the entity can be read from [pointer+4,4]

08077C54 CreateEntityType8?1
  ; r0 - ? 03000B80?
08077CB8 CreateEntityType8?2
  ; r0 - ? 03000B80?

0805E768 GetEntitySlot
  ; r0 - Entity type
0805E678 Get03EntitySlot
0805E679 Get03EntitySlot
0805E744 GetSpecial03EntitySlot?
  ; Gets an entity slot out of slots 1-7.
  ; 030011E8 being the first and 03001518 being the last.
0805E8D4 Get02EntitySlot
0805E8D5 Get02EntitySlot

0805E89C DeleteSomeEntities?
  ; Deletes some entities in list 02033290 and calls DeleteAll03EntitiesMarkedForDeletion
  ; This is called when you change rooms

0805E79C DeleteEntity
  ; r0 - Entity pointer
0805E7BC Delete03Entity
0805E7BD Delete03Entity
  ; r0 - Entity pointer in list 03001160
0805E900 Delete02Entity
0805E901 Delete02Entity
  ; r0 - Entity pointer in list 02033290

0805E84C DeleteAll03EntitiesMarkedForDeletion
  ; This function is called every frame.
  ; Any entities in list 03001160 marked for deletion (-1 for the entity's "previous entity pointer") will be deleted by this function.
0805E870 Delete03EntityMarkedForDeletion
  ; r0 - Entity pointer in list 03001160



0801D714 LoadPalettesByPaletteGroupIndex
  ; r0 - Palette group index (index in list 080FF850)
0801D754 LoadPalettes
  ; r0 - Pointer to the first palette in ROM to copy.
  ; r1 - What slot index to load the first palette into palette VRAM. (00-1F.)
  ; r2 - Number of palettes to copy.



0804A57C Type3EntityLoadSprite
  ; r0 - Entity pointer in RAM
080A7D80 Type4EntityLoadSprite
  ; r0 - Entity pointer in RAM
080A2838 Type6EntityLoadSprite
  ; r0 - Entity pointer in RAM
0806EC78 Type7EntityLoadSprite
  ; r0 - Entity pointer in RAM
080173A4 Type8EntityLoadSprite
  ; r0 - Entity pointer in RAM
080A285C EntityLoadSprite
  ; r0 - Entity pointer in RAM
  ; r1 - Entity form
  ; r2 - Pointer to the entity's sprite loading data

0804A6C0 EnemyLoadSprite?
  ; r0 - Enemy entity pointer in RAM
  ; r1 - Pointer to the enemy's sprite loading data

0804A554 Type3EntityGetSpriteLoadingData
  ; r0 - Entity pointer in RAM
  ; Returns a pointer to the sprite loading data for that enemy and form.
080A7D58 Type4EntityGetSpriteLoadingData
  ; r0 - Entity pointer in RAM
  ; Returns a pointer to the sprite loading data for that ??? entity and form.
0806EC50 Type7EntityGetSpriteLoadingData
  ; r0 - Entity pointer in RAM
  ; Returns a pointer to the sprite loading data for that NPC and form.

0806FDEC LoadExtraSpriteData
  ; r0 - Entity pointer in RAM
  ; r1 - Pointer to the extra sprite loading data list entry to load (one example is 0810CB78 for sitting people)

080ADE74 LoadSpriteAssets??Swap?
  ; r0 - Index in list 02024494...? Also doubles as something else?
  ; For compressed GFX, it's also an index in GFX VRAM for where to load the GFX (multiply index by 0x200 and add to 06012800)

080ADDD8 SetEntityGFXPointer?
  ; r0 - Index in list 02024494...?
  ; r1 - Bitfield.
    ; & 00000001 - GFX data is compressed.
    ; & 00FFFFFC - Asset offset relative to 085A2E80 to the GFX data.
    ; & 7F000000 - Length of the GFX data if it's uncompressed, in terms of 16 8x8 tiles (so multiply this number by 0x200 to get the length in bytes).

080ADF80 LoadFixedGFX
  ; r0 - Entity pointer in list 030015A0
  ; r1 - Index in list 08132B30 (0 is invalid)

080AE104 ReserveGFXSlots??
  ; r0 - Index in list 02024494 of the first slot to reserve
  ; r1 - Entity subtype?
  ; r2 - Number of slots to reserve?

080837B0 Load???GFXForArea
  ; r0 - Entity pointer in list 030015A0

0801D040 LoadAndSetEntityObjectPalette
  ; r0 - Entity pointer (e.g. 03001160 for the player)
  ; r1 - Object palette ID. (See LoadObjectPalettes for details.)
  ; Returns the object palette slot index in VRAM the palette was loaded into.
0801D19C SetEntityObjectPalette
  ; r0 - Entity pointer (e.g. 03001160 for the player)
  ; r1 - Palette index in the list of object palettes loaded in VRAM

0801D244 EntityUnloadObjectPalette
  ; r0 - Object palette index
  ; Marks the palette as being used by 1 less entity in list 02001A00.
  ; If this results in the palette being used by no entities, it marks this slot as free to use.

0801D2C8 LoadObjectPalettes
  ; r0 - Object palette ID. Affects which palettes to load. Different values have different behavior:
  ;   00-05: Does not need to load any palettes since this is a common palette that is always loaded.
  ;   06-14: This value minus 6 is an index in the currently loaded palettes (020176A0). Simply copy one background palette at that index to this object palette.
  ;   15: Load a palette where all 16 colors are simply a copy of color C in background palette 3 (brown).
  ;   16+: This value minus 16 is an index in list 08133368 of the palette(s) to load.
  ; r1 - What object palette slot index the first of these palettes should be loaded into. e.g. Object palette slot 6 is slot 0x16 out of all palettes in VRAM.

08000E96 LoadAssetAsynchronously?



080AE7E8 MoveEntity??
  ; r0 - Entity pointer
  ; r1 - Y movement speed in 1/256ths of a pixel per frame??
  ; r2 - X movement speed in 1/256ths of a pixel per frame??
  ; r3 - 0?

;;; Sprites

080042AC InitializeAnimationForceUpdateFrame
  ; r0 - Entity in list 03001160
  ; r1 - Animation index
08004260 InitializeAnimation
  ; r0 - Entity in list 03001160
  ; r1 - Animation index
080042B8 UpdateAnimationSingleFrame
  ; r0 - Entity in list 03001160
08004276 UpdateAnimationVariableFrames
  ; r0 - Entity in list 03001160
  ; r1 - Number of frames that have passed

0806FF60 SetExtraSpriteFrame
  ; r0 - Main entity
  ; r1 - Sub-entry index
  ; r2 - Frame index

080700C8 GetSpriteSubEntryOffsetDataPointer
  ; r0 - Sprite index
  ; r1 - Frame index
  ; Returns a pointer inside 089FB780
0806FF88 SetSpriteSubEntryOffsetData1
  ; r0 - Entity pointer in RAM
  ; r1 - Subentry index of the main body sprite
  ; r2 - Subentry index of the secondary sprite to set the offset for
  ; Uses X offset 1 and Y offset 1 from entries in list 089FB780.
0806FFD8 SetSpriteSubEntryOffsetData2
  ; r0 - Entity pointer in RAM
  ; r1 - Subentry index of the main body sprite
  ; r2 - Subentry index of the secondary sprite to set the offset for
  ; Uses X offset 2 and Y offset 2 from entries in list 089FB780.



03005B0C CheckCollision
  ; r4 - Entity A
  ; r5 - Entity B

08018308 DarkNutOnHit??



0805EEB4 MessageLoad?
  ; r0 - Pointer to ?
  ; r1 - Message ID.
  ; Breakpoint on 0805EF34 and look in r1 to get a pointer to the message string.

080563EC ShowMessage
  ; r0 - Message ID
08056378 ShowMessageNoOverlapCameraFollowEntity
  ; r0 - Message ID
  ; Calls ShowMessageNoOverlapEntity with the entity being whatever entity the camera is currently set to follow.
08056398 ShowMessageNoOverlapEntity
  ; r0 - Message ID
  ; r1 - Entity to avoid the text box overlapping

08078AA8 ShowMessageAlternate???
  ; r0 - Message ID
  ; r1 - ? 0?

0805EF8C MessageCommandGetNextByte?
  ; r0 - ? pointer in RAM
  ; Reads the next byte in the message string, increments the pointer in the message string currently being read by 1, returns the read byte

0806F1AC ShowNPCDialogue
  ; r0 - Entity pointer in RAM of the NPC
  ; r1 - Pointer to an NPC dialogue entry in ROM

080A4CBC CreateDescriptionMessageForFigurine?
  ; r0 - Figurine ID


080806BC FindAndDoExitTransition
  ; r0 - Player's X pos
  ; r1 - Player's Y pos
  ; r2 - ?
  ; r3 - A bitfield of the transition types to check? e.g. 5 here means accept types 0 and 2, but no others.
  ; When the player touches the edge of a screen, this is called to check if the player should transition to a different room.
08080794 CheckExitTransitionTypes0and2
  ; r0 - Exit pointer
  ; r1 - Player's X pos
  ; r2 - Player's Y pos
  ; r3 - ? Direction of transition? 0 - up, 2 - down?, 1 - ?
08080808 CheckExitTransitionTypes1and3
  ; r0 - Exit pointer
  ; r1 - Player's X pos
  ; r2 - Player's Y pos
08080840 DoExitTransition
  ; r0 - Exit pointer

080562CC CheckRegionOnScreen?
  ; r0 - X pos?
  ; r1 - Y pos?
  ; r2 - Width?
  ; r3 - Height?


080A4DB8 LoadGUIScreen?
  ; r0 - An index in list 08128A38. This is read from 020344A4,1.
080A50A0 GetUIScreenForCurrentAreaMapScreen?

0801DDA0 DrawDungeonMap
  ; r0 - Floor index to draw (0 is the highest floor, 1 is the second highest, etc).
0801DF28 DrawDungeonMapPixel?
  ; r0 - 
  ; r1 - 
  ; r2 - the 2-bit data from the big bitfield of the map??
  ; r3 - 

080A5C9C DungeonMapScreenUpdate
  ; Checks if up or down are pressed and changes the selected floor on the dungeon map screen.

0801DF10 GetMapWidthByMapEntry?
  ; r0 - Pointer to the current map entry to draw?? (subentry of list 080C9C50)
08052D58 GetMapWidth?
  ; r0 - Area index

080A6A80 GetCurrentWorldMapRegion
  ; r0 - Player's X pos in pixels (from 030010C0,2)
  ; r1 - Player's Y pos in pixels (from 030010C2,2)
  ; Returns a pointer inside list 08127F94 to what the correct map region should be (or 0 for none).
08052620 CheckOnOverworld

08051E04 SetCurrentWorldMapRegionAsVisited
  ; Sets the bit in bitfield 02002A80 for the current world map region being visited (if on a world map area)

080530C8 UpdateHyruleTownState??
  ; Updates the values at 02002A48,1.

0300648C RenderFrameToOAM

03006580 RenderBySpriteAndFrameIndex?
  ; r0 - 03001010?
  ; r1 - Sprite index
  ; r2 - Frame index

; 03006724 - this line is where it reads the tile gfx index for the entity
; 03006728 - this line is where it reads the palette index for the entity

0806FAB0 MoveEntityZIndexOnTopOfOtherEntity
  ; r0 - Entity that shoul appear on the bottom
  ; r1 - Entity to change the Z-index of to make it appear on top.


08056010 SetGameState
  ; r0 - Game state index

0805041C SetCurrentSaveFile
  ; r0 - Save file index

08050624 LoadSaveFile
  ; r0 - Save file index

0807D0A0 ValidateChecksumCorrect?
  ; r0 - Pointer on the stack to the existing checksum? and a 4 char string after the checksum
  ; r1 - Pointer to data
  ; r2 - Data length
0807D1A4 CalculateChecksum
  ; r0 - Pointer to data
  ; r1 - Data length
  ; Returns a 16-bit checksum.
  ; This is how to calculate the checksum:
  ;   checksum = 0
  ;   for each halfword in data:
  ;     checksum += (halfword ^ data_length_remaining)


03005F40 UpdateAllEntities

0805E780 DeleteThisEntity
080A2500 DeleteThisEntity2


08028E9C InitializeBusinessScrub?
  ; r0 - Pointer to the business scrub entity
08029198 CheckBusinessScrubHasSoldItsItem
  ; r0 - Pointer to the entry in list 080CC954 for this business scrub.
  ; Returns true if this scrub has sold Link its item, or false otherwise.
  ; Note that this function hardcodes some item IDs and flag indexes.



;;; Entity-specific functions

0805E780 UpdateType0Entity
08016F28 UpdateType1Entity
0805E780 UpdateType2Entity
080011C4 UpdateType3Entity
08016AE4 UpdateType4Entity
0805E780 UpdateType5Entity
080174A4 UpdateType6Entity
08017530 UpdateType7Entity
08017338 UpdateType8Entity
08017508 UpdateType9Entity


0801EAB0 Enemy00Exec
0801EE18 Enemy01Exec
0801FC08 Enemy02Exec
0801FF5C Enemy03Exec
08020638 Enemy04Exec
08020B80 Enemy05Exec
080216D4 Enemy06Exec
08021758 Enemy07Exec
08021D64 Enemy08Exec
08021FA8 Enemy09Exec
0802222C Enemy0AExec
08022414 Enemy0BExec
08022918 Enemy0CExec
08022B88 Enemy0DExec
08022FA4 Enemy0EExec
08023038 Enemy0FExec
08023B94 Enemy10Exec
08023F28 Enemy11Exec
08024FE8 Enemy12Exec
08025CA0 Enemy13Exec
08027D6C Enemy14Exec
0802823C Enemy15Exec
0802890C Enemy16Exec
080292A0 Enemy17Exec
08029858 Enemy18Exec
0802A238 Enemy19Exec
0802A408 Enemy1AExec
0802A804 Enemy1BExec
0802B2AC Enemy1CExec
0802B4D8 Enemy1DExec
0802B5F0 Enemy1EExec
0802B9D4 Enemy1FExec
0802BB6C Enemy20Exec
0802C228 Enemy21Exec
0802C660 Enemy22Exec
0802CC3C Enemy23Exec
0802D018 Enemy24Exec
0802EC6C Enemy25Exec
0802F118 Enemy26Exec
0802F4A0 Enemy27Exec
0802FB30 Enemy28Exec
0802FDD4 Enemy29Exec
08030198 Enemy2AExec
08030A2C Enemy2BExec
08031374 Enemy2CExec
08031664 Enemy2DExec
08031864 Enemy2EExec
08032358 Enemy2FExec
080323BC Enemy30Exec
080327F4 Enemy31Exec
08032C74 Enemy32Exec
080333B8 Enemy33Exec
0803353C Enemy34Exec
0803379C Enemy35Exec
08033ED4 Enemy36Exec
08034C60 Enemy37Exec
08035164 Enemy38Exec
080351BC Enemy39Exec
0803704C Enemy3AExec
0803746C Enemy3BExec
08037C3C Enemy3CExec
08037EC8 Enemy3DExec
080381AC Enemy3EExec
08038430 Enemy3FExec
080388B4 Enemy40Exec
08038CA4 Enemy41Exec
080392AC Enemy42Exec
08039BA0 Enemy43Exec
0803A154 Enemy44Exec
0803BB7C Enemy45Exec
0803C160 Enemy46Exec
0803C738 Enemy47Exec
0803CCB8 Enemy48Exec
0803CE80 Enemy49Exec
0803D0C8 Enemy4AExec
0803E08C Enemy4BExec
0803E528 Enemy4CExec
0803EAEC Enemy4DExec
0803EFDC Enemy4EExec
0803F770 Enemy4FExec
08040B2C Enemy50Exec
08041330 Enemy51Exec
08042554 Enemy52Exec
08044118 Enemy53Exec
080445DC Enemy54Exec
0801EAB0 Enemy55Exec
08044F50 Enemy56Exec
08045200 Enemy57Exec
08045394 Enemy58Exec
080455AC Enemy59Exec
080456D8 Enemy5AExec
08045B88 Enemy5BExec
08046134 Enemy5CExec
080467F0 Enemy5DExec
080481C0 Enemy5EExec
080482C4 Enemy5FExec
08048640 Enemy60Exec
08048988 Enemy61Exec
08048D98 Enemy62Exec
08048F8C Enemy63Exec
0804905C Enemy64Exec
08049B70 Enemy65Exec
08049CAC Enemy66Exec

080A7F00 Obstacle00Exec
080A8030 Obstacle01Exec
080A8190 Obstacle02Exec
080A82F8 Obstacle03Exec
080A843C Obstacle04Exec
080A86BC Obstacle05Exec
080A87C8 Obstacle06Exec
080A8A68 Obstacle07Exec
080A8B98 Obstacle08Exec
080A8CAC Obstacle09Exec
080A8DC0 Obstacle0AExec
080A9158 Obstacle0BExec
080A91E0 Obstacle0CExec
080A9300 Obstacle0DExec
080A9500 Obstacle0EExec
080A95DC Obstacle0FExec
080A9A00 Obstacle10Exec
080A9CA8 Obstacle11Exec
080A9DA4 Obstacle12Exec
080A9E54 Obstacle13Exec
080AA400 Obstacle14Exec
080AA68C Obstacle15Exec
080AAAE8 Obstacle16Exec
080AAB8C Obstacle17Exec
080AABF0 Obstacle18Exec
080AB05C Obstacle19Exec
080AB2A8 Obstacle1AExec
080AB510 Obstacle1BExec
080AB690 Obstacle1CExec
080AB8C8 Obstacle1DExec
080ABA5C Obstacle1EExec
080ABB8C Obstacle1FExec
080ABF24 Obstacle20Exec
080ABFB0 Obstacle21Exec
080AC274 Obstacle22Exec
080AC8A8 Obstacle23Exec
080ACA34 Obstacle24Exec
0805E7BC Obstacle25Exec

08080E08 Object00Exec
0808161C Object01Exec
08081814 Object02Exec
08081AC8 Object03Exec
08082040 Object04Exec
0808220C Object05Exec
080828E0 Object06Exec
08082E9C Object07Exec
08083320 Object08Exec
0808386C Object09Exec
08083A94 Object0AExec
08083B88 Object0BExec
08083DD8 Object0CExec
08084334 Object0DExec
08084458 Object0EExec
080844C8 Object0FExec
08084824 Object10Exec
08084D34 Object11Exec
08084FC0 Object12Exec
08085194 Object13Exec
080854EC Object14Exec
0808601C Object15Exec
080860C0 Object16Exec
080861AC Object17Exec
08086284 Object18Exec
080866C0 Object19Exec
080869C4 Object1AExec
08086A90 Object1BExec
080874A0 Object1CExec
080874E0 Object1DExec
08087504 Object1EExec
08087690 Object1FExec
0808780C Object20Exec
08087998 Object21Exec
08087BAC Object22Exec
0808868C Object23Exec
08088804 Object24Exec
08088A50 Object25Exec
08089134 Object26Exec
080891DC Object27Exec
0808976C Object28Exec
08089848 Object29Exec
08089B00 Object2AExec
08089CBC Object2BExec
08089D04 Object2CExec
0808A3F4 Object2DExec
0808A4F4 Object2EExec
0808A6F4 Object2FExec
0808A850 Object30Exec
0808A9C4 Object31Exec
0808A9FC Object32Exec
0808B294 Object33Exec
0808B448 Object34Exec
0808B86C Object35Exec
0808BB18 Object36Exec
0808BDE8 Object37Exec
0808BE84 Object38Exec
0808C1E4 Object39Exec
0808C69C Object3AExec
0808C91C Object3BExec
0808CAE4 Object3CExec
0808CEF0 Object3DExec
0808D0C8 Object3EExec
0808D5DC Object3FExec
0808D674 Object40Exec
0808DB54 Object41Exec
0808DD7C Object42Exec
0808DED0 Object43Exec
0808E280 Object44Exec
0808E414 Object45Exec
0808E4A8 Object46Exec
0808E688 Object47Exec
0808E7A0 Object48Exec
0808F0A0 Object49Exec
0808F640 Object4AExec
0808F77C Object4BExec
0808F968 Object4CExec
080905A0 Object4DExec
08090EA8 Object4EExec
08090F70 Object4FExec
08090FB8 Object50Exec
08090FF8 Object51Exec
080910A0 Object52Exec
08091108 Object53Exec
080911EC Object54Exec
080916CC Object55Exec
08091E60 Object56Exec
08091EF4 Object57Exec
08092038 Object58Exec
0809225C Object59Exec
0809271C Object5AExec
0809288C Object5BExec
0809298C Object5CExec
08092B74 Object5DExec
08092CA0 Object5EExec
08092ED4 Object5FExec
080933C0 Object60Exec
08093428 Object61Exec
08093760 Object62Exec
08093D70 Object63Exec
08093E24 Object64Exec
08093FB4 Object65Exec
08094084 Object66Exec
08094130 Object67Exec
0809475C Object68Exec
08094A0C Object69Exec
08094A44 Object6AExec
0809631C Object6BExec
08096AD4 Object6CExec
08096E10 Object6DExec
08097370 Object6EExec
080973E4 Object6FExec
08097420 Object70Exec
08097588 Object71Exec
080979B4 Object72Exec
08097A5C Object73Exec
08097B6C Object74Exec
0808C934 Object75Exec
0808C94C Object76Exec
08097D78 Object77Exec
08097DD4 Object78Exec
08097F84 Object79Exec
08098168 Object7AExec
08098260 Object7BExec
080984CC Object7CExec
08098544 Object7DExec
080989F8 Object7EExec
08098A78 Object7FExec
08098B10 Object80Exec
08098C68 Object81Exec
08098CF4 Object82Exec
08098EE0 Object83Exec
080991A4 Object84Exec
08099734 Object85Exec
08099DB8 Object86Exec
08099EFC Object87Exec
0809A774 Object88Exec
0809AAEC Object89Exec
0809ADB4 Object8AExec
0809AF5C Object8BExec
0809B3AC Object8CExec
0809B6F0 Object8DExec
0809B840 Object8EExec
0809BEB4 Object8FExec
0809C394 Object90Exec
0809C3C8 Object91Exec
0809CC5C Object92Exec
0809CE90 Object93Exec
0809CEC8 Object94Exec
0809CF24 Object95Exec
0809D784 Object96Exec
0809D9A8 Object97Exec
0809E348 Object98Exec
0809E42C Object99Exec
0809E500 Object9AExec
0809E7A8 Object9BExec
0809E824 Object9CExec
0809E9FC Object9DExec
0809EC4C Object9EExec
0809ED18 Object9FExec
0809F12C ObjectA0Exec
0809F288 ObjectA1Exec
0809F2F8 ObjectA2Exec
0809F4C4 ObjectA3Exec
0809F828 ObjectA4Exec
0809F8A4 ObjectA5Exec
0809F908 ObjectA6Exec
0809F9AC ObjectA7Exec
0809F9DC ObjectA8Exec
0809FEE0 ObjectA9Exec
0809FF68 ObjectAAExec
080A00E0 ObjectABExec
080A01C0 ObjectACExec
080A048C ObjectADExec
080A0554 ObjectAEExec
080A058C ObjectAFExec
080A066C ObjectB0Exec
080A08AC ObjectB1Exec
080A09A4 ObjectB2Exec
080A0A34 ObjectB3Exec
080A0B90 ObjectB4Exec
080A0E28 ObjectB5Exec
080A0E54 ObjectB6Exec
080A0E98 ObjectB7Exec
080A0F24 ObjectB8Exec
080A1204 ObjectB9Exec
080A16DC ObjectBAExec
080A20FC ObjectBBExec
080A2164 ObjectBCExec
080A225C ObjectBDExec
080A23A0 ObjectBEExec
080A2444 ObjectBFExec
080A2448 ObjectC0Exec
080A2560 ObjectC1Exec

0805E7BC NPC00Exec
0805FD24 NPC01Exec
0805FDC0 NPC01ExecFusionScreen
0805FDF8 NPC02Exec
0805FFA0 NPC02ExecFusionScreen
0805FFD8 NPC03Exec
080600A8 NPC03ExecHead
080603B4 NPC03ExecFusionScreen
080603FC NPC04Exec
0806097C NPC04ExecFusionScreen
080609E8 NPC05Exec
08061B8C NPC06Exec
08061C60 NPC06ExecHead
08062088 NPC06ExecFusionScreen
080620C8 NPC07Exec
08062834 NPC07ExecHead
08062A60 NPC07ExecFusionScreen
08063CF8 NPC08Exec
08063FAC NPC08ExecHead
08062AD8 NPC09Exec
08062B98 NPC0AExec
08064508 NPC0BExec
08064524 NPC0BExecHead
08062CF0 NPC0CExec
08062E20 NPC0DExec
08062E60 NPC0EExec
08062F70 NPC0FExec
08062FF0 NPC0FExecHead
080631E8 NPC10Exec
080632A8 NPC11Exec
080633E0 NPC11ExecHead
08063524 NPC12Exec
0806370C NPC12ExecFusionScreen
08063740 NPC13Exec
08063974 NPC13ExecHead
080639E8 NPC13ExecFusionScreen
08063A60 NPC14Exec
08063CC4 NPC14ExecFusionScreen
08063CF8 NPC15Exec
08063FAC NPC15ExecHead
08064508 NPC16Exec
08064524 NPC16ExecHead
08064790 NPC17Exec
08064860 NPC17ExecFusionScreen
08064890 NPC18Exec
08064960 NPC18ExecFusionScreen
08064990 NPC19Exec
08064A60 NPC19ExecFusionScreen
08064A90 NPC1AExec
08064C6C NPC1AExecHead
08064D18 NPC1AExecFusionScreen
08064D58 NPC1BExec
0806501C NPC1BExecFusionScreen
08065054 NPC1CExec
08065534 NPC1DExec
080657A8 NPC1DExecHead
080657DC NPC1DExecFusionScreen
0806581C NPC1EExec
08065960 NPC1EExecFusionScreen
08065990 NPC1FExec
08065B1C NPC1FExecFusionScreen
08065B4C NPC20Exec
08065BA4 NPC21Exec
08065F90 NPC21ExecFusionScreen
08065FC0 NPC22Exec
080660A8 NPC22ExecHead
08066298 NPC22ExecFusionScreen
080662D8 NPC23Exec
080665E4 NPC24Exec
08066780 NPC24ExecFusionScreen
080667B0 NPC25Exec
08066948 NPC25ExecFusionScreen
08066978 NPC26Exec
08066A5C NPC27Exec
08066CB4 NPC28Exec
08066FD8 NPC29Exec
08067080 NPC29ExecHead
08067118 NPC29ExecFusionScreen
08067158 NPC2AExec
08067228 NPC2AExecHead
0806732C NPC2AExecFusionScreen
08067380 NPC2BExec
08067750 NPC2BExecFusionScreen
080677B4 NPC2CExec
08067DFC NPC2CExecFusionScreen
08067E2C NPC2DExec
080681E0 NPC2DExecHead
08068270 NPC2DExecFusionScreen
080682B0 NPC2EExec
080686D4 NPC2FExec
0806889C NPC2FExecHead
0806897C NPC2FExecFusionScreen
080689C0 NPC30Exec
08068F4C NPC30ExecFusionScreen
08068F98 NPC31Exec
080692A0 NPC31ExecFusionScreen
080692D0 NPC32Exec
08069514 NPC32ExecFusionScreen
08069544 NPC33Exec
08069784 NPC34Exec
08069AE8 NPC34ExecHead
08069B1C NPC35Exec
08069F2C NPC35ExecHead
0806A194 NPC35ExecFusionScreen
0806A1D8 NPC36Exec
0806A2B4 NPC36ExecHead
0806A358 NPC37Exec
0806ABC8 NPC38Exec
0806AE0C NPC38ExecHead
0806B184 NPC38ExecFusionScreen
0806B1CC NPC39Exec
0806B32C NPC39ExecFusionScreen
0806B3AC NPC3AExec
0806B35C NPC3AExecHead
0806B624 NPC3AExecFusionScreen
0806B664 NPC3BExec
0806B9D0 NPC3CExec
0806B9F0 NPC3DExec
0806BBE4 NPC3EExec
0806BC64 NPC3EExecHead
0806BCFC NPC3EExecFusionScreen
0806BD54 NPC3FExec
0806BDAC NPC40Exec
0806BE54 NPC40ExecFusionScreen
0806BF80 NPC41Exec
0806C0B0 NPC42Exec
0806C13C NPC43Exec
0806C1D4 NPC43ExecFusionScreen
0806C204 NPC44Exec
0806C2C4 NPC45Exec
0806C36C NPC45ExecFusionScreen
0806C39C NPC46Exec
0806C478 NPC46ExecHead
0806C510 NPC46ExecFusionScreen
0806C550 NPC47Exec
0806C5A8 NPC48Exec
0806C68C NPC48ExecHead
0806C738 NPC48ExecFusionScreen
0806C780 NPC49Exec
0806C888 NPC49ExecHead
0806CA94 NPC49ExecFusionScreen
0806CADC NPC4AExec
0806CD70 NPC4AExecFusionScreen
0806CDA8 NPC4BExec
0806CEE8 NPC4BExecFusionScreen
0806CF18 NPC4CExec
0806D86C NPC4DExec
0806D9D0 NPC4EExec
0806DCD4 NPC4EExecFusionScreen
0806DD44 NPC4FExec
0806DD78 NPC50Exec
0806DED0 NPC51Exec
0806E278 NPC52Exec
0806E308 NPC53Exec
0806E3E4 NPC53ExecHead
0806E458 NPC53ExecFusionScreen
0806E4A0 NPC54Exec
0806E6E0 NPC54ExecFusionScreen
0806E710 NPC55Exec
0806E894 NPC55ExecFusionScreen
0806E8CC NPC56Exec
0806E8F8 NPC56ExecHead
0806E91C NPC57Exec
0806EAF4 NPC58Exec
0806EBAC NPC58ExecHead
0805E7BC NPC59Exec
0805E7BC NPC5AExec
0805E7BC NPC5BExec
0805E7BC NPC5CExec
0805E7BC NPC5DExec
0805E7BC NPC5EExec
0805E7BC NPC5FExec
0805E7BC NPC60Exec
0805E7BC NPC61Exec
0805E7BC NPC62Exec
0805E7BC NPC63Exec
0805E7BC NPC64Exec
0805E7BC NPC65Exec
0805E7BC NPC66Exec
0805E7BC NPC67Exec
0805E7BC NPC68Exec
0805E7BC NPC69Exec
0805E7BC NPC6AExec
0805E7BC NPC6BExec
0805E7BC NPC6CExec
0805E7BC NPC6DExec
0805E7BC NPC6EExec
0805E7BC NPC6FExec
0805E7BC NPC70Exec
0805E7BC NPC71Exec
0805E7BC NPC72Exec
0805E7BC NPC73Exec
0805E7BC NPC74Exec
0805E7BC NPC75Exec
0805E7BC NPC76Exec
0805E7BC NPC77Exec
0805E7BC NPC78Exec
0805E7BC NPC79Exec
0805E7BC NPC7AExec
0805E7BC NPC7BExec
0805E7BC NPC7CExec
0805E7BC NPC7DExec
0805E7BC NPC7EExec
0805E7BC NPC7FExec

0805E7BC PlayerItem00Exec
080A7544 PlayerItem01Exec
0801B188 PlayerItem02Exec
0801B45C PlayerItem03Exec
08018FCC PlayerItem04Exec
080A2D74 PlayerItem05Exec
08054A40 PlayerItem06Exec
08056330 PlayerItem07Exec
080ADA30 PlayerItem08Exec
080704BC PlayerItem09Exec
0805E7BC PlayerItem0AExec
0805E7BC PlayerItem0BExec
0801B898 PlayerItem0CExec
0801BEF8 PlayerItem0DExec
0801BA00 PlayerItem0EExec
08019480 PlayerItem0FExec
080ACBCC PlayerItem10Exec
08018C88 PlayerItem11Exec
080700E8 PlayerItem12Exec
080ACF14 PlayerItem13Exec
0805FBD0 PlayerItem14Exec
080A306C PlayerItem15Exec
08019480 PlayerItem16Exec
08056328 PlayerItem17Exec
0801BEF8 PlayerItem18Exec

08057064 Manager01Exec
0805751C Manager02Exec
080576C0 Manager03Exec
08057854 Manager04Exec
08057AD0 Manager05Exec
08057CB4 Manager06Exec
08057D50 Manager07Exec
08057ED0 Manager08Exec
080581D8 Manager09Exec
08058380 Manager0AExec
080585F0 Manager0BExec
0805884C Manager0CExec
08058DD0 Manager0DExec
08058E60 Manager0EExec
08058ECC Manager0FExec
08059570 Manager10Exec
080599B8 Manager11Exec
080599EC Manager12Exec
08059DAC Manager13Exec
08059E58 Manager14Exec
0805A280 Manager15Exec
0805AB4C Manager16Exec
0805AD48 Manager17Exec
0805ADD8 Manager18Exec
0805AF60 Manager19Exec
0805B030 Manager1AExec
0805B3B4 Manager1BExec
0805B53C Manager1CExec
0805B5C8 Manager1DExec
0805B668 Manager1EExec
0805B6F4 Manager1FExec
0805B7A0 Manager20Exec
0805B820 Manager21Exec
0805B8EC Manager22Exec
0805BC74 Manager23Exec
0805BF18 Manager24Exec
0805C61C Manager25Exec
0805C6B8 Manager26Exec
0805C81C Manager27Exec
0805C934 Manager28Exec
0805CB90 Manager29Exec
0805CFC0 Manager2AExec
0805D014 Manager2BExec
0805D174 Manager2CExec
0805D1FC Manager2DExec
0805D250 Manager2EExec
0805D3C8 Manager2FExec
0805D4AC Manager30Exec
0805D630 Manager31Exec
0805D7A4 Manager32Exec
0805DAE8 Manager33Exec
0805DB94 Manager34Exec
0805DC84 Manager35Exec
0805DDB4 Manager36Exec
0805DE38 Manager37Exec
0805E0A8 Manager38Exec
0805E0FC Manager39Exec
